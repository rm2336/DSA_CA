/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodtestscheduler;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author rokom
 */
public class BloodTestSchedulerGUI extends javax.swing.JFrame {
    private ArrayList<GP> gpList = new ArrayList<>();
    /**
     * Creates new form BloodTestSchedulerGUI
     */
    public BloodTestSchedulerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        displayTA = new javax.swing.JTextArea();
        queueBTN = new javax.swing.JButton();
        patientsBTN = new javax.swing.JButton();
        addPatientBTN = new javax.swing.JButton();
        noshowsBTN = new javax.swing.JButton();
        saveBTN = new javax.swing.JButton();
        loadBTN = new javax.swing.JButton();
        newBTN = new javax.swing.JButton();
        addDoctorBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Blood Test Scheduler");

        displayTA.setEditable(false);
        displayTA.setColumns(20);
        displayTA.setRows(5);
        displayTA.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        displayTA.setEnabled(false);
        jScrollPane1.setViewportView(displayTA);

        queueBTN.setText("View Queue");
        queueBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queueBTNActionPerformed(evt);
            }
        });

        patientsBTN.setText("View Patients");

        addPatientBTN.setText("Add Patient");
        addPatientBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientBTNActionPerformed(evt);
            }
        });

        noshowsBTN.setText("View No-Shows");

        saveBTN.setText("Save");

        loadBTN.setText("Load");

        newBTN.setText("New Appointment");

        addDoctorBTN.setText("Add GP");
        addDoctorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(queueBTN)
                                .addGap(18, 18, 18)
                                .addComponent(patientsBTN)
                                .addGap(18, 18, 18)
                                .addComponent(noshowsBTN)
                                .addGap(28, 28, 28)
                                .addComponent(addPatientBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(saveBTN)
                            .addGap(28, 28, 28)
                            .addComponent(loadBTN)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newBTN)
                            .addComponent(addDoctorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(queueBTN)
                    .addComponent(patientsBTN)
                    .addComponent(addPatientBTN)
                    .addComponent(noshowsBTN))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveBTN)
                            .addComponent(loadBTN))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(addDoctorBTN)
                        .addGap(18, 18, 18)
                        .addComponent(newBTN)
                        .addContainerGap(24, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queueBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queueBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queueBTNActionPerformed

    private void addDoctorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorBTNActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Enter GP's name: ");
        String address = JOptionPane.showInputDialog("Enter GP's address: ");
        String phoneNo = JOptionPane.showInputDialog("Enter GP's phone number: ");
        GP tempGP = new GP(name, address, phoneNo);
        gpList.add(tempGP);
    }//GEN-LAST:event_addDoctorBTNActionPerformed

    private void addPatientBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientBTNActionPerformed
        // TODO add your handling code here:
        String[] priorities = new String[] {"Low", "Medium", "Urgent"};
        String name = JOptionPane.showInputDialog(rootPane, "Enter patient's name: ");
        int age = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Enter patient's age: "));
        int priority = JOptionPane.showOptionDialog(rootPane, "", "Choose urgency: ", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, priorities, priorities[0]);
        int isFromWard = JOptionPane.showConfirmDialog(rootPane, "Are they coming from a hospital ward?");
        ArrayList<String> gpNames = new ArrayList<>();
        for (GP temp : gpList) {
            gpNames.add(temp.getName());
        }
        int gp = JOptionPane.showOptionDialog(rootPane, "", "Choose their designated GP: ", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, gpNames.toArray(), gpNames.get(0));
    }//GEN-LAST:event_addPatientBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodTestSchedulerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodTestSchedulerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDoctorBTN;
    private javax.swing.JButton addPatientBTN;
    private javax.swing.JTextArea displayTA;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadBTN;
    private javax.swing.JButton newBTN;
    private javax.swing.JButton noshowsBTN;
    private javax.swing.JButton patientsBTN;
    private javax.swing.JButton queueBTN;
    private javax.swing.JButton saveBTN;
    // End of variables declaration//GEN-END:variables
}
